{"name":"Cakepdf","body":"# CakePHP PDF plugin v2.0.1\r\nThis plugin contains a component to generate PDFs using views.\r\nThe CakePDF plugin is compatible with CakePHP 2.0+.\r\n\r\n## Installation\r\n- Download the repository and extract it in `app/Plugin/CakePdf` or on one of your plugin paths.\r\n- Add a prefix in `app/Config/core.php`. The config declaration will be something like this `Configure::write('Routing.prefixes', array('admin', 'pdf'));`.\r\n- Load the plugin:\r\n\r\n\t```\r\n\t<?php CakePlugin::load('CakePdf'); ?>\r\n\r\n## Usage\r\nIn a controller add component declaration with something similar to the following:\r\n\r\n\t<?php\r\n\tclass Post extends AppController {\r\n\t\tpublic $components = array(\r\n\t\t\t'CakePdf.CakePdf'\r\n\t\t);\r\n\r\n\t\tpublic function pdf_index() {\r\n\t\t\t// content of your action\r\n\t\t}\r\n\t}\r\n\t?>\r\n\r\nIn the view you only need use HTML or PHP code, it will be converted to PDF and force to download.\r\n\r\n### Configure\r\nBy default CakePdf use the prefix `pdf` to render actions.\r\nIf you want to change it you can set a `prefix` property on component.\r\n\r\n    ...\r\n    public $components = array(\r\n        'CakePdf.CakePdf' => array(\r\n            'prefix' => 'mypdf'\r\n        )\r\n    );\r\n\r\n    public function mypdf_index() {\r\n        // content of your action\r\n    }\r\n    ...\r\n\r\nDo not forget to add your custom prefix in `app/Config/core.php` file.\r\n\r\nYou can also set a custom layout, filename, orientation, charset, paper.\r\nBy default we have the following properties:\r\n\r\n    ...\r\n    public $components = array(\r\n        'CakePdf.CakePdf' => array(\r\n            'prefix' => 'pdf',\r\n            'layout' => 'CakePdf.pdf',\r\n            'filename' => '{name_of_action}.pdf', // this is the name on output pdf (when force download occurs)\r\n            'orientation' => 'P',  // accept 'P' for portrait and 'L' for landscape\r\n            'paper' => 'A4' // accept all paper types of tcpdf library\r\n        )\r\n    );\r\n    ...\r\n\r\nIn addition to this you can create a header `app/View/Elements/pdf/header.ctp` or footer `app/View/Elements/pdf/footer.ctp` files to place it on every page generated in your pdf.\r\n\r\n     ...\r\n    public $components = array(\r\n        'CakePdf.CakePdf' => array(\r\n            'header' => '{name_of_header_file_element}',\r\n            'footer' => '{name_of_footer_file_element}'\r\n        )\r\n    );\r\n    ...\r\n\r\n### Additional Methods\r\n- `setFilename($filename)` : It will change the output filename.\r\n- `addStyle($files)` : Add css expressions to render in pdf view. The `$files` argument accepts a string path of file, or an array of path files (it automatically refer to folder `webroot/css/`).\r\n- `dispatch($method, $params)` : Used to perform the TCPDF methods that where not directly implemented in this component.","tagline":"PDF Component to use with CakePHP","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}